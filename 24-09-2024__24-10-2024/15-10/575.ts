// რადგან ტკბილეულის რაოდენობა n ყოველთვის ლუწია
// ელისი შეჭამს n/2 რაოდენობის ტკბილეულს
// მისი მიზანია რომ ამ რაოდენობაში მოექცეს რაც შეიძლება მეტი სახეობა ტკბილეულის
// ჩვენი მიზანია დავითვალოთ რამდენი სახეობის ტკბილეული აქვს ელისს
// თუ სახეობების რაოდენობა მთლიანი რაოდენობის ნახევარზე მეტია
// მაშინ ელისს შეუძლია ყოველი შეჭმული ტკბილეული განსხვავებული აირჩიოს
// თუ ნაკლებია მაშინ ტკბილეულის სახეობათა რაოდენობა იქნება იმ განსხვავებულ სახეობათა
// რაოდენობა რაც ელისს შეუძლია რომ შეჭამოს

// იმისთვის რომ დავითვალოთ ტკბილეულების სახეობათა რაოდენობა
// საკმარიცია ერთი სრული იტერაცია მასივზე
// და ინფორმაციის შესანახად ობიექტი

// შევქმნით ობიექტს რომელშიც ახალ წევრს დავამატებთ მხოლოდ მაშინ
// როცა მსგავსი წევრი მასში არ იქნება

// მსგავსი ოპერაციისთვის მასივის გამოყენებაც შესაძლებელია
// თუმცა ვფიქრობ რომ ოპტიმალურობის თვალსაზრისით ობიექტში არსებული ელემენტების
// გადამოწმება უფრო მომგებიანია

// ალგორითმი:
// ნაბიჯი 1 - შევქმნათ ცარიელი ობიექტი frequencies
// ნაბიჯი 2 - შევქმნათ ციკლი გადმოცემული მასივის თითოეული ელემენტის გამოსაძახებლად
// ნაბიჯი 3 - თუ ელემენტი არის frequencies ობიექტში, მაშინ გამოვტოვოთ იტერაცია
// ნაბიჯი 4 - თუ ელემენტი არ არის frequencies ობიექტში, მაშინ დავამატოთ იგი
// ნაბიჯი 5 - თუ frequencies გასაღებების რაოდენობა მეტია n/2, მაშინ დავაბრუნოთ n/2
// ნაბიჯი 6 - სხვა შემთხვევაში დავაბრუნოთ გასაღებების რაოდენობა

function distributeCandies(candyType: number[]): number {
  let frequencies: { [key: number]: boolean } = {};
  let candyCount = candyType.length;
  for (let i = 0; i < candyCount; i++) {
    frequencies[candyType[i]] = true;
  }
  let typesCount = Object.keys(frequencies).length;
  if (typesCount > candyCount / 2) return candyCount / 2;
  else return typesCount;
}

// შემდგომი ანალიზის შედეგად დგინდება რომ ობიექტის შექმნა სულაც არ არის საჭირო
// ობიექტის არ არსებობა ასევე გამორიცხავს შედარების საჭიროებას
// შედარებით ოპტიმალურია Set ჩაშენებული ობიექტის გამოყენება
// ასევე საბოლოო პასუხის დასაბრუნებლადაც არ არის საჭირო რთული ლოგიკა
// პრობლემის გადაჭრა შეიძლება ერთ ხაზში ჩაიწეროს.